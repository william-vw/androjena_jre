[D1:
	(<> xpl:output ?deriv) (?en xpl:derivation ?deriv)
	(?en xpl:sourceObject ?o) isUri(?o) (?o xpl:string ?os)
	(?en xpl:sourcePredicate ?p) (?p xpl:string ?ps) noMatch(?ps ".*%s.*")
	strConcat (?ps ' ' ?os ?descr) trim(?descr ?descr2)
->
	(?deriv xpl:description ?descr2)
]

[D2:
	(<> xpl:output ?deriv) (?en xpl:derivation ?deriv)
	(?en xpl:sourceObject ?o) isLiteral(?o) notDType(?o xsd:boolean)
	(?en xpl:sourcePredicate ?p) (?p xpl:string ?ps) noMatch(?ps ".*%s.*")
	strConcat (?ps ' ' ?o ?descr) trim(?descr ?descr2)
->
	(?deriv xpl:description ?descr2)
]

[D3:
	(<> xpl:output ?deriv) (?en xpl:derivation ?deriv)
	(?en xpl:sourceObject ?o) isUri(?o)
	# includes a placeholder
	(?en xpl:sourcePredicate ?p) (?p xpl:string ?ps) regex(?ps ".*%s.*")
	(?o xpl:string ?os)
	replaceAll("%s" ?os ?ps ?ps2)
->
	(?deriv xpl:description ?ps2)
]

[D4:
	(<> xpl:output ?deriv) (?en xpl:derivation ?deriv)
	(?en xpl:sourceObject ?o) isLiteral(?o) notDType(?o xsd:boolean)
	# includes a placeholder
	(?en xpl:sourcePredicate ?p) (?p xpl:string ?ps) regex(?ps ".*%s.*")
	replaceAll("%s" ?o ?ps ?ps2)
->
	(?deriv xpl:description ?ps2)
]

[D5:
	(<> xpl:output ?deriv) (?en xpl:derivation ?deriv)
	(?en xpl:sourceObject "true"^^xsd:boolean)
	(?en xpl:sourcePredicate ?p) (?p xpl:string ?ps)
->
	(?deriv xpl:description ?ps)
]

[D6:
	(<> xpl:output ?deriv) (?en xpl:derivation ?deriv)
	(?en xpl:sourceObject "false"^^xsd:boolean)
	(?en xpl:sourcePredicate ?p) (?p xpl:string ?ps)
	strConcat("no " ?ps ?descr)
->
	(?deriv xpl:description ?descr)
]

[D7:
	(<> xpl:output ?deriv) (?en xpl:derivation ?deriv)
	(?en xpl:sourceFunctorName ?x)
->
	(?deriv xpl:description '')
]

[D8:
	(<> xpl:output ?deriv) (?en xpl:derivation ?deriv)
	(?en xpl:sourceTerm ?t) isUri(?t) noValue(?t rdf:type xpl:Subject) (?t rdfs:label ?str)
->
	(?t xpl:string ?str)
]

[D9:
	(<> xpl:output ?deriv) (?en xpl:derivation ?deriv)
	(?en xpl:sourceTerm ?t) isUri(?t) noValue(?t rdf:type xpl:Subject) noValue(?t rdfs:label ?x) localName(?t ?str)
	splitOnCase(?str ' ' ?str2)
->
	(?t xpl:string ?str2)
]

[D10:
	(<> xpl:output ?deriv) (?en xpl:derivation ?deriv)
	(?en xpl:sourceSubject ?t) isUri(?t) (?t rdf:type xpl:Subject)
->
	(?t xpl:string "You")
]