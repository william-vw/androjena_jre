[S1:
	(<> xpl:output ?deriv) (?deriv xpl:description ?descr)
	strConcat("You " ?descr " because you " ?descr2)
	joinLinkedStrings(?deriv ", " ", and " " and " xpl:via xpl:derivation xpl:description ?descr3)
	strConcat(?descr2 ?descr3 '.' ?sentence)
	
	# deal with hasX properties
	replaceAll("ou has" "ou have" ?sentence ?sentence2)
	replaceAll("(,|and) has" "$1" ?sentence2 ?sentence3)
	
	# deal with isX properties
	replaceAll("ou is" "ou are" ?sentence3 ?sentence4)
->
	(?deriv xpl:sentence ?sentence4)
]

[S2:
	(<> xpl:output ?deriv)
	joinLinkedStrings(?deriv ", " ", and " " and " xpl:via xpl:derivation xpl:functorDescription ?fdescr) 
	strConcat("(which " ?fdescr ")" ?sentence)
	
	# "and is" -> "and"
	replaceAll("(,|and) is" "$1" ?sentence ?sentence2)
->
	(?deriv xpl:functorSentence ?sentence2)
]

# TODO
[S3:
	(<> xpl:output ?deriv)
	(?deriv xpl:via ?en1) (?en1 
	joinLinkedStrings(?deriv ", " ", and " " and " xpl:via xpl:derivation xpl:functorDescription ?fdescr) 
	strConcat("(which " ?fdescr ")" ?sentence)
	
	# "and is" -> "and"
	replaceAll("(,|and) is" "$1" ?sentence ?sentence2)
->
	(?deriv xpl:functorSentence ?sentence2)
]