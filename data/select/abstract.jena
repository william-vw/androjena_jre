#- init
#	noValue(?en0 xpl:via ?en) -> (<> xpl:current ?en) # root deriv (does not support other deriv)
# OR (better)
#	(?en pml:hasConclusion ?cl) (?cl prov:value ?stmt) (?stmt rdf:predicate sa:hasDiagnosis) -> (<> xpl:current ?en)

#- onSelectReason
#	(<> xpl:current [selection])

[abstract1:
	(<> xpl:current ?en) (?en xpl:derivation ?deriv)
->
	(<> xpl:output ?deriv) (?deriv rdf:type xpl:Recommendation)
]

#[abstract2:	
#	(<> xpl:current ?en0) (?en0 xpl:derivation ?deriv0) (?deriv0 xpl:via ?en) 
#	(?en xpl:derivation ?deriv)
#->
#	(<> xpl:output ?deriv) (?deriv rdf:type xpl:Reason) 
#]

[abstract3:
	(<> xpl:output ?deriv) (?deriv rdf:type xpl:Reason)
	(?deriv xpl:via ?en1) (?en1 rdf:type pml:NodeSet)
->
	(?deriv xpl:expandable "true"^^xsd:boolean)
]